@* specifies this as a page and the route *@
@page "/todo"

@* Update the <h3> header to show a count of the number of todo items that aren't complete (IsDone is false) *@
<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

@* Make the title text for each todo item editable, and you can add a checkbox to help the user keep track of completed items. *@
<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone">
            <input @bind="todo.Title" />
        </li>
    }
</ul>

<input placeholder="New todo" @bind="newTodo"/>
<button @onclick="AddTodo">Add todo</button>

@code {
    private List<TodoItem> todos = new();
    private string? newTodo;

    private void AddTodo()
    {
        // Add the todo with the specified title to the list. Clear the value of the text input by setting newTodo to an empty string
        if(!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }
}
